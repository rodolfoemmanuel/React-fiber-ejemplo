/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.9 ../public/Maleta.glb 
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useControls } from 'leva'
import { Color } from 'three'

export function Model() {
  const [hovered, setHovered] = useState(false)
  const { nodes, materials } = useGLTF('/Maleta.glb')

  useEffect(() => {
    document.body.style.cursor = hovered ? 'pointer' : 'auto'
  }, [hovered])

  useControls('Maleta', () => {
    console.log('creating color pickers')

     using forEach
     const colorPickers = {}
     Object.keys(materials).forEach((m) => {
       colorPickers[m] = {
         value: '#' + ((Math.random() * 0xffffff) << 0).toString(16).padStart(6, '0'),
         onChange: (v) => {
           materials[m].color = new Color(v)
         }
       }
     })
    return colorPickers

    // using reduce
    return Object.keys(materials).reduce(
      (acc, m) =>
        Object.assign(acc, {
          [m]: {
            value:
              '#' +
              ((Math.random() * 0xffffff) << 0).toString(16).padStart(6, '0'),
            onChange: (v) => {
              materials[m].color = new Color(v)
            }
          }
        }),
      {}
    )
  })

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Suitcase.geometry} material={materials['Material.001']}>
        <mesh geometry={nodes.Handle.geometry} material={materials['Material.001']} position={[0, -0.001, 0]} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/Maleta.glb')
